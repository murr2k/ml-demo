name: Dependency Management

on:
  schedule:
    - cron: '0 9 * * 1' # Every Monday at 9 AM
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge-deps:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Auto-approve patch updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge patch updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-review:
    name: Weekly Dependency Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Check for outdated packages
        run: |
          echo "### Dependency Review Report" >> $GITHUB_STEP_SUMMARY
          echo "Generated on: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "#### Outdated Packages" >> $GITHUB_STEP_SUMMARY
          npm outdated --json > outdated.json || true
          
          if [ -s outdated.json ]; then
            echo '```json' >> $GITHUB_STEP_SUMMARY
            cat outdated.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ All packages are up to date!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Security audit
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Security Audit" >> $GITHUB_STEP_SUMMARY
          npm audit --json > audit.json || true
          
          if [ -s audit.json ]; then
            vulnerabilities=$(jq '.metadata.vulnerabilities' audit.json)
            echo "Found vulnerabilities: $vulnerabilities" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ No security vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: License check
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### License Compliance" >> $GITHUB_STEP_SUMMARY
          npx license-checker --summary >> $GITHUB_STEP_SUMMARY || echo "License checker not installed"